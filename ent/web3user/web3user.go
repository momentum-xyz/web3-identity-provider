// Code generated by entc, DO NOT EDIT.

package web3user

import (
	"fmt"

	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the web3user type in the database.
	Label = "web3user"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldAddress holds the string denoting the address field in the database.
	FieldAddress = "address"
	// FieldWalletType holds the string denoting the wallet_type field in the database.
	FieldWalletType = "wallet_type"
	// EdgeWeb3Challenges holds the string denoting the web3_challenges edge name in mutations.
	EdgeWeb3Challenges = "web3_challenges"
	// Table holds the table name of the web3user in the database.
	Table = "web3users"
	// Web3ChallengesTable is the table that holds the web3_challenges relation/edge.
	Web3ChallengesTable = "web3challenges"
	// Web3ChallengesInverseTable is the table name for the Web3Challenge entity.
	// It exists in this package in order to avoid circular dependency with the "web3challenge" package.
	Web3ChallengesInverseTable = "web3challenges"
	// Web3ChallengesColumn is the table column denoting the web3_challenges relation/edge.
	Web3ChallengesColumn = "web3_user_id"
)

// Columns holds all SQL columns for web3user fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldAddress,
	FieldWalletType,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUUID holds the default value on creation for the "uuid" field.
	DefaultUUID func() uuid.UUID
)

// WalletType defines the type for the "wallet_type" enum field.
type WalletType string

// WalletType values.
const (
	WalletTypeEth      WalletType = "eth"
	WalletTypePolkadot WalletType = "polkadot"
)

func (wt WalletType) String() string {
	return string(wt)
}

// WalletTypeValidator is a validator for the "wallet_type" field enum values. It is called by the builders before save.
func WalletTypeValidator(wt WalletType) error {
	switch wt {
	case WalletTypeEth, WalletTypePolkadot:
		return nil
	default:
		return fmt.Errorf("web3user: invalid enum value for wallet_type field: %q", wt)
	}
}
