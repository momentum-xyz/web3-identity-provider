// Code generated by entc, DO NOT EDIT.

package web3challenge

import (
	"github.com/google/uuid"
)

const (
	// Label holds the string label denoting the web3challenge type in the database.
	Label = "web3challenge"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldUUID holds the string denoting the uuid field in the database.
	FieldUUID = "uuid"
	// FieldWeb3UserID holds the string denoting the web3_user_id field in the database.
	FieldWeb3UserID = "web3_user_id"
	// FieldLoginChallenge holds the string denoting the login_challenge field in the database.
	FieldLoginChallenge = "login_challenge"
	// FieldWeb3Challenge holds the string denoting the web3_challenge field in the database.
	FieldWeb3Challenge = "web3_challenge"
	// EdgeWeb3User holds the string denoting the web3_user edge name in mutations.
	EdgeWeb3User = "web3_user"
	// Table holds the table name of the web3challenge in the database.
	Table = "web3challenges"
	// Web3UserTable is the table that holds the web3_user relation/edge.
	Web3UserTable = "web3challenges"
	// Web3UserInverseTable is the table name for the Web3User entity.
	// It exists in this package in order to avoid circular dependency with the "web3user" package.
	Web3UserInverseTable = "web3users"
	// Web3UserColumn is the table column denoting the web3_user relation/edge.
	Web3UserColumn = "web3_user_id"
)

// Columns holds all SQL columns for web3challenge fields.
var Columns = []string{
	FieldID,
	FieldUUID,
	FieldWeb3UserID,
	FieldLoginChallenge,
	FieldWeb3Challenge,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

var (
	// DefaultUUID holds the default value on creation for the "uuid" field.
	DefaultUUID func() uuid.UUID
)
