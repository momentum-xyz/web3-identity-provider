// Code generated by entc, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// Web3challengesColumns holds the columns for the "web3challenges" table.
	Web3challengesColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "login_challenge", Type: field.TypeString, Unique: true},
		{Name: "web3_challenge", Type: field.TypeString, Unique: true},
		{Name: "web3_user_id", Type: field.TypeInt},
	}
	// Web3challengesTable holds the schema information for the "web3challenges" table.
	Web3challengesTable = &schema.Table{
		Name:       "web3challenges",
		Columns:    Web3challengesColumns,
		PrimaryKey: []*schema.Column{Web3challengesColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "web3challenges_web3users_web3_challenges",
				Columns:    []*schema.Column{Web3challengesColumns[4]},
				RefColumns: []*schema.Column{Web3usersColumns[0]},
				OnDelete:   schema.Cascade,
			},
		},
	}
	// Web3usersColumns holds the columns for the "web3users" table.
	Web3usersColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "uuid", Type: field.TypeUUID, Unique: true},
		{Name: "address", Type: field.TypeString, Unique: true},
		{Name: "wallet_type", Type: field.TypeEnum, Nullable: true, Enums: []string{"eth", "polkadot"}},
	}
	// Web3usersTable holds the schema information for the "web3users" table.
	Web3usersTable = &schema.Table{
		Name:       "web3users",
		Columns:    Web3usersColumns,
		PrimaryKey: []*schema.Column{Web3usersColumns[0]},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		Web3challengesTable,
		Web3usersTable,
	}
)

func init() {
	Web3challengesTable.ForeignKeys[0].RefTable = Web3usersTable
}
